import { Character } from "../../types/Fire Emblem Fates/UnitStruct.tsx";
import { defaultClassData } from "./defaultClassData.tsx";
import { defaultSkills } from "./defaultSkills.tsx";
import { Class } from "../../types/Fire Emblem Fates/ClassStruct.tsx";
import { Skill } from "../../types/Fire Emblem Fates/SkillStruct.tsx";

const getClass = (name: string): Class => {
  const cls = defaultClassData.find((c) => c.className === name);
  if (!cls) throw new Error(`Class ${name} not found`);
  return cls;
};

export function getSkill(skillName: string): Skill {
  const skill = defaultSkills.find((s) => s.name === skillName);
  if (!skill) {
    console.warn(`Skill ${skillName} not found in defaultSkills`);
    return defaultSkills[-1];
  }
  return skill;
}

export const defaultCharactersConquest: Character[] = [
  {
    name: "Corrin (M)",
    gender: "M",
    title: "Crux of Fate",
    class: getClass("Nohr Prince"),
    baseInternalLevel: 1,
    royalty_status: true,
    level: 1,
    starting_weapons: [],
    stats: {
      hp: 19,
      strength: 7,
      magic: 4,
      skill: 7,
      speed: 6,
      luck: 5,
      defense: 6,
      resistance: 2,
      move: 5,
    },
    base_growths: {
      hp: 45,
      strength: 45,
      magic: 30,
      skill: 40,
      speed: 45,
      luck: 45,
      defense: 35,
      resistance: 25,
    },
    personal_skill: getSkill("Supportive"),
    basic_skills: [
      getSkill("Nobility"),
      getSkill("N/A"),
      getSkill("N/A"),
      getSkill("N/A"),
      getSkill("N/A"),
    ],
    base_class_set: {
      starting_class: getClass("Nohr Prince"),
      starting_class_tree: getClass("Nohr Prince"),
      heart_seal_classes: [],
      friendship_seal_partners: [],
      partner_seal_partners: [],
      friendship_seal_base_class: null,
      partner_seal_base_class: null,
    },
    boon: "None selected yet",
    bane: "None selected yet",
    RouteAvailabilityBR: "Prologue",
    RouteAvailabilityCQ: "Prologue",
    RouteAvailabilityRV: "Prologue",
    weapon_ranks: {
      WeaponRankSwordKatana: "E",
      WeaponRankLanceNaginata: "n",
      WeaponRankAxeClub: "n",
      WeaponRankTomeScroll: "n",
      WeaponRankKnifeShuriken: "n",
      WeaponRankBowYumi: "n",
      WeaponRankStaffRod: "n",
      WeaponRankStone: "D",
    },
    maxStatModifiers: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    personal_pair_up_bonuses_base: {
      dodge: 5,
    },
    personal_pair_up_bonuses_C: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    personal_pair_up_bonuses_B: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    personal_pair_up_bonuses_A: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    personal_pair_up_bonuses_S: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    support_bonus_base: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 10,
      Avoid: 0,
    },
    support_bonus_C: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 0,
      Avoid: 0,
    },
    support_bonus_B: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 0,
      Avoid: 0,
    },
    support_bonus_A: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 0,
      Avoid: 0,
    },
    support_bonus_S: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 0,
      Avoid: 0,
    },
  },
  {
    name: "Corrin (F)",
    gender: "F",
    title: "Crux of Fate",
    class: getClass("Nohr Princess"),
    baseInternalLevel: 1,
    royalty_status: true,
    level: 1,
    starting_weapons: [],
    stats: {
      hp: 19,
      strength: 7,
      magic: 4,
      skill: 7,
      speed: 6,
      luck: 5,
      defense: 6,
      resistance: 2,
      move: 5,
    },
    base_growths: {
      hp: 45,
      strength: 45,
      magic: 30,
      skill: 40,
      speed: 45,
      luck: 45,
      defense: 35,
      resistance: 25,
    },
    personal_skill: getSkill("Supportive"),
    basic_skills: [
      getSkill("Nobility"),
      getSkill("N/A"),
      getSkill("N/A"),
      getSkill("N/A"),
      getSkill("N/A"),
    ],
    base_class_set: {
      starting_class: getClass("Nohr Princess"),
      starting_class_tree: getClass("Nohr Princess"),
      heart_seal_classes: [],
      friendship_seal_partners: [],
      partner_seal_partners: [],
      friendship_seal_base_class: null,
      partner_seal_base_class: null,
    },
    boon: "None selected yet",
    bane: "None selected yet",
    RouteAvailabilityBR: "Prologue",
    RouteAvailabilityCQ: "Prologue",
    RouteAvailabilityRV: "Prologue",
    weapon_ranks: {
      WeaponRankSwordKatana: "E",
      WeaponRankLanceNaginata: "n",
      WeaponRankAxeClub: "n",
      WeaponRankTomeScroll: "n",
      WeaponRankKnifeShuriken: "n",
      WeaponRankBowYumi: "n",
      WeaponRankStaffRod: "n",
      WeaponRankStone: "D",
    },
    maxStatModifiers: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    personal_pair_up_bonuses_base: {
      dodge: 5,
    },
    personal_pair_up_bonuses_C: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    personal_pair_up_bonuses_B: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    personal_pair_up_bonuses_A: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    personal_pair_up_bonuses_S: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    support_bonus_base: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 10,
      Avoid: 0,
    },
    support_bonus_C: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 0,
      Avoid: 0,
    },
    support_bonus_B: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 0,
      Avoid: 0,
    },
    support_bonus_A: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 0,
      Avoid: 0,
    },
    support_bonus_S: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 0,
      Avoid: 0,
    },
  },
  {
    name: "Camilla",
    gender: "F",
    title: "Bewitching Beauty",
    royalty_status: true,
    class: getClass("Malig Knight"),
    baseInternalLevel: 15,
    level: 1,
    starting_weapons: [],
    stats: {
      hp: 30,
      strength: 19,
      magic: 11,
      skill: 15,
      speed: 19,
      luck: 12,
      defense: 18,
      resistance: 15,
      move: 8,
    },
    base_growths: {
      hp: 40,
      strength: 50,
      magic: 25,
      skill: 50,
      speed: 55,
      luck: 25,
      defense: 35,
      resistance: 45,
    },
    personal_skill: getSkill("Rose's Thorn"),
    basic_skills: [
      getSkill("Strength +2"),
      getSkill("Lunge"),
      getSkill("N/A"),
      getSkill("N/A"),
      getSkill("N/A"),
    ],
    base_class_set: {
      starting_class: getClass("Malig Knight"),
      starting_class_tree: getClass("Wyvern Rider"),
      heart_seal_classes: [getClass("Dark Mage")],
      friendship_seal_partners: [],
      partner_seal_partners: [],
      friendship_seal_base_class: null,
      partner_seal_base_class: null,
    },
    RouteAvailabilityBR: false,
    RouteAvailabilityCQ: "Chapter 10",
    RouteAvailabilityRV: "Chapter 12",
    weapon_ranks: {
      WeaponRankSwordKatana: "n",
      WeaponRankLanceNaginata: "n",
      WeaponRankAxeClub: "C",
      WeaponRankTomeScroll: "D",
      WeaponRankKnifeShuriken: "n",
      WeaponRankBowYumi: "n",
      WeaponRankStaffRod: "n",
      WeaponRankStone: "n",
    },
    maxStatModifiers: {
      strength: 1,
      magic: -1,
      skill: 1,
      speed: 1,
      luck: -2,
      defense: 1,
      resistance: 0,
    },
    personal_pair_up_bonuses_base: {
      dodge: 5,
    },
    personal_pair_up_bonuses_C: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 1,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    personal_pair_up_bonuses_B: {
      strength: 0,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 1,
    },
    personal_pair_up_bonuses_A: {
      strength: 1,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 0,
      resistance: 0,
    },
    personal_pair_up_bonuses_S: {
      strength: 1,
      magic: 0,
      skill: 0,
      speed: 0,
      luck: 0,
      defense: 1,
      resistance: 0,
    },
    support_bonus_base: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 10,
      Avoid: 0,
    },
    support_bonus_C: {
      Crit: 0,
      CritAvoid: 0,
      Hit: 0,
      Avoid: 5,
    },
    support_bonus_B: {
      Crit: 3,
      CritAvoid: 0,
      Hit: 0,
      Avoid: 0,
    },
    support_bonus_A: {
      Crit: 0,
      CritAvoid: 5,
      Hit: 0,
      Avoid: 0,
    },
    support_bonus_S: {
      Crit: 3,
      CritAvoid: 0,
      Hit: 5,
      Avoid: 0,
    },
  },
  // {
  //   name: "",
  //   gender: "",
  //   title: "",
  //   royalty_status: ,
  //   class: getClass(""),
  //   baseInternalLevel: ,
  //   level: ,
  //   starting_weapons: [],
  //   stats: {
  //     hp: 0,
  //     strength: 0,
  //     magic: 0,
  //     skill: 0,
  //     speed: 0,
  //     luck: 0,
  //     defense: 0,
  //     resistance: 0,
  //     move: 0,
  //   },
  //   base_growths: {
  //     hp: 0,
  //     strength: 0,
  //     magic: 0,
  //     skill: 0,
  //     speed: 0,
  //     luck: 0,
  //     defense: 0,
  //     resistance: 0,
  //   },
  //   personal_skill: getSkill(""),
  //   basic_skills: [
  //     getSkill("N/A"),
  //     getSkill("N/A"),
  //     getSkill("N/A"),
  //     getSkill("N/A"),
  //     getSkill("N/A"),
  //   ],
  //   base_class_set: {
  //     starting_class: getClass(""),
  //     starting_class_tree: getClass(""),
  //     heart_seal_classes: [getClass("")],
  //     friendship_seal_partners: [],
  //     partner_seal_partners: [],
  //     friendship_seal_base_class: null,
  //     partner_seal_base_class: null,
  //   },
  //   RouteAvailabilityBR: false,
  //   RouteAvailabilityCQ: "Chapter ",
  //   RouteAvailabilityRV: "Chapter ",
  //   weapon_ranks: {
  //     WeaponRankSwordKatana: "n",
  //     WeaponRankLanceNaginata: "n",
  //     WeaponRankAxeClub: "n",
  //     WeaponRankTomeScroll: "n",
  //     WeaponRankKnifeShuriken: "n",
  //     WeaponRankBowYumi: "n",
  //     WeaponRankStaffRod: "n",
  //     WeaponRankStone: "n",
  //   },
  //   maxStatModifiers: {
  //     strength: 0,
  //     magic: 0,
  //     skill: 0,
  //     speed: 0,
  //     luck: 0,
  //     defense: 0,
  //     resistance: 0,
  //   },
  //   personal_pair_up_bonuses_base: {
  //     dodge: 5,
  //   },
  //   personal_pair_up_bonuses_C: {
  //     strength: 0,
  //     magic: 0,
  //     skill: 0,
  //     speed: 0,
  //     luck: 0,
  //     defense: 0,
  //     resistance: 0,
  //   },
  //   personal_pair_up_bonuses_B: {
  //     strength: 0,
  //     magic: 0,
  //     skill: 0,
  //     speed: 0,
  //     luck: 0,
  //     defense: 0,
  //     resistance: 0,
  //   },
  //   personal_pair_up_bonuses_A: {
  //     strength: 0,
  //     magic: 0,
  //     skill: 0,
  //     speed: 0,
  //     luck: 0,
  //     defense: 0,
  //     resistance: 0,
  //   },
  //   personal_pair_up_bonuses_S: {
  //     strength: 0,
  //     magic: 0,
  //     skill: 0,
  //     speed: 0,
  //     luck: 0,
  //     defense: 0,
  //     resistance: 0,
  //   },
  //   support_bonus_base: {
  //     Crit: 0,
  //     CritAvoid: 0,
  //     Hit: 10,
  //     Avoid: 0,
  //   },
  //   support_bonus_C: {
  //     Crit: 0,
  //     CritAvoid: 0,
  //     Hit: 0,
  //     Avoid: 0,
  //   },
  //   support_bonus_B: {
  //     Crit: 0,
  //     CritAvoid: 0,
  //     Hit: 0,
  //     Avoid: 0,
  //   },
  //   support_bonus_A: {
  //     Crit: 0,
  //     CritAvoid: 0,
  //     Hit: 0,
  //     Avoid: 0,
  //   },
  //   support_bonus_S: {
  //     Crit: 0,
  //     CritAvoid: 0,
  //     Hit: 0,
  //     Avoid: 0,
  //   },
  // },
];

// // Function to insert skills into a character's basic_skills array and optionally set personal_skill
// export const insertSkillsIntoCharacter = (
//   character: Character,
//   basicSkillNames: string[],
//   personalSkillName?: string, // Optional parameter for personal_skill
// ): Character => {
//   // Insert basic skills
//   const basicSkills = basicSkillNames
//     .map((name) => getSkill(name))
//     .filter((skill) => skill.name !== "Unknown"); // Assuming unknownSkill has name "Unknown"
//   character.basic_skills = basicSkills;

//   // Set personal_skill if provided
//   if (personalSkillName !== undefined) {
//     character.personal_skill = personalSkillName
//       ? getSkill(personalSkillName)
//       : null;
//   }

//   return character;
// };
